<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Infinispan 11.0.0.Alpha2 and 10.1.3.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/eK80cPIjS1Q/" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_11_0_0_alpha2_and_10_1_3_final</id><updated>2020-03-03T12:00:00Z</updated><published>2020-03-03T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Dear Infinispan community,&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;we’ve just tagged a couple of releases.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First off is the second Alpha release of what will eventually become Infinispan 11. The &lt;a href="https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12344572"&gt;release notes&lt;/a&gt; may not be exciting, but it is mostly preparatory work for the big features we are working on: vastly improved async cross-site replication, monitoring, query improvements, the console and the CLI, and more.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We also released a micro-update to 10.1 which fixes quite a few bugs, especially in the way we handle JMX and MP metrics and further improves the documentation.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h1 id="_new_release_naming_scheme" class="sect0"&gt;&lt;a class="anchor" href="#_new_release_naming_scheme"&gt;&lt;/a&gt;New release naming scheme&lt;/h1&gt; &lt;div class="openblock partintro"&gt; &lt;div class="content"&gt; Starting with the next development release of Infinispan 11, we will be adopting a new naming scheme. We will no longer be using the &lt;em&gt;Alpha&lt;/em&gt; and &lt;em&gt;Beta&lt;/em&gt; monikers, but we will use a progressive &lt;em&gt;Dev&lt;/em&gt; suffix to indicate that it’s a development release. The next release will therefore be called 11.0.0.Dev03. &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us"&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="https://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.jboss.org/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/eK80cPIjS1Q" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan community, we’ve just tagged a couple of releases. First off is the second Alpha release of what will eventually become Infinispan 11. The release notes may not be exciting, but it is mostly preparatory work for the big features we are working on: vastly improved async cross-site replication, monitoring, query improvements, the console and the CLI, and more. We also released a micr...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2020-03-03T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/03/03/2020-03-03-infinispan-11.0.0.Alpha2/</feedburner:origLink></entry><entry><title>C# 8 default interface methods</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/dN-cN9e3-OY/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="C#" scheme="searchisko:content:tags" /><category term="C# 8" scheme="searchisko:content:tags" /><category term="diamond problem" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="interface methods" scheme="searchisko:content:tags" /><category term="static" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-c_8_default_interface_methods</id><updated>2020-03-03T08:00:13Z</updated><published>2020-03-03T08:00:13Z</published><content type="html">&lt;p&gt;In the previous articles, we discussed C# 8 &lt;a href="https://developers.redhat.com/blog/2020/02/24/c-8-asynchronous-streams/" target="_blank" rel="noopener noreferrer"&gt;async streams&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/" target="_blank" rel="noopener noreferrer"&gt;pattern matching&lt;/a&gt;. In this article, we’ll look at C# 8 default interface methods.&lt;/p&gt; &lt;h2&gt;Extending interfaces&lt;/h2&gt; &lt;p&gt;Before C# 8, it was not possible to add members to an interface without breaking the classes that implement the interface. Because interface members were abstract, classes needed to provide an implementation. C# 8 allows us to extend an interface and provide a default implementation. The runtime (which also needs to support this feature) uses the default implementation when the class does not provide it:&lt;/p&gt; &lt;pre&gt;interface IOutput { void PrintMessage(string message); void PrintException(Exception exception) =&amp;#62; PrintMessage($"Exception: {exception}"); } class ConsoleOutput : IOutput { public void PrintMessage(string message) =&amp;#62; Console.WriteLine(message); } &lt;/pre&gt; &lt;p&gt;In this example, &lt;code&gt;ConsoleOutput&lt;/code&gt; does not provide an implementation for &lt;code&gt;PrintException&lt;/code&gt;. When &lt;code&gt;PrintException&lt;/code&gt; is called against a &lt;code&gt;ConsoleOutput&lt;/code&gt; instance, the default method from the &lt;code&gt;IOutput&lt;/code&gt; interface will be called. &lt;code&gt;ConsoleOutput&lt;/code&gt; might provide its own implementation.&lt;/p&gt; &lt;p&gt;&lt;span id="more-676517"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;A derived interface can provide a more appropriate default implementation by explicitly implementing the base member:&lt;/p&gt; &lt;pre&gt;interface IA { void M() { WriteLine("IA.M"); } } interface IB : IA { void IA.M() { WriteLine("IB.M"); } } &lt;/pre&gt; &lt;p&gt;We explicitly implement the base member by including &lt;code&gt;IA.&lt;/code&gt; in the name. Without &lt;code&gt;IA.&lt;/code&gt;, the compiler would warn us to either make it explicit, or use the &lt;code&gt;new&lt;/code&gt; keyword if we want to hide it.&lt;/p&gt; &lt;p&gt;C# 8 allows us to add &lt;code&gt;static&lt;/code&gt; members in the interface that can be used by the default interface members:&lt;/p&gt; &lt;pre&gt;interface IOutput { private static string s_exceptionPrefix = "Exception"; public static string ExceptionPrefix { get =&amp;#62; s_exceptionPrefix; set =&amp;#62; s_exceptionPrefix = value; } void PrintMessage(string message); sealed void PrintException(Exception exception) =&amp;#62; PrintMessage($"{s_exceptionPrefix}: {exception}"); } &lt;/pre&gt; &lt;p&gt;This example shows a &lt;code&gt;private static&lt;/code&gt; field and a &lt;code&gt;public static&lt;/code&gt; method to implement the &lt;code&gt;ExceptionPrefix&lt;/code&gt; property that&amp;#8217;s used by the &lt;code&gt;sealed PrintException&lt;/code&gt; method. By adding the &lt;code&gt;sealed&lt;/code&gt; keyword, this method can no longer be overridden.&lt;/p&gt; &lt;h2&gt;Code inheritance&lt;/h2&gt; &lt;p&gt;C# supports inheriting from a single-base class and implementing multiple interfaces. Until C# 8, only the base class could provide code that is usable by the derived class. With C# 8, interfaces can provide code to their implementing classes.&lt;/p&gt; &lt;p&gt;In addition to that enhancement, we can use access modifiers on members and provide static members:&lt;/p&gt; &lt;pre&gt;interface IOutput { sealed void PrintException(Exception exception) =&amp;#62; PrintMessageCore($"Exception: {exception}"); protected void PrintMessageCore(string message); protected static void PrintToConsole(string message) =&amp;#62; Console.WriteLine(message); } class ConsoleOutput : IOutput { void IOutput.PrintMessageCore(string message) { IOutput.PrintToConsole(message); } } &lt;/pre&gt; &lt;p&gt;In this example, we see that the &lt;code&gt;IOutput&lt;/code&gt; interface delegates the &lt;code&gt;PrintMessageCore&lt;/code&gt; implementation to the derived class and provides a sealed implementation of &lt;code&gt;PrintException&lt;/code&gt; that makes use of &lt;code&gt;PrintMessageCore&lt;/code&gt;. The example also shows how the &lt;code&gt;static protected PrintToConsole&lt;/code&gt; method can be called from a derived type.&lt;/p&gt; &lt;p&gt;This setup allows us to include the code that is common with the interface, allowing different classes to share this code without a common base class and thus enabling &lt;a href="https://en.wikipedia.org/wiki/Multiple_inheritance" target="_blank" rel="noopener noreferrer"&gt;multiple inheritance&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Trait_(computer_programming)" target="_blank" rel="noopener noreferrer"&gt;trait&lt;/a&gt; patterns.&lt;/p&gt; &lt;p&gt;C# 8 allows sharing code, but interfaces are still not allowed to have instance fields (state). Interface methods that require state either need to be abstract (so they are implemented in the class), or they need to accept the state as an argument (provided by the caller, like the implementing class). This approach avoids the &lt;a href="https://en.wikipedia.org/wiki/Multiple_inheritance#The_diamond_problem" target="_blank" rel="noopener noreferrer"&gt;inheritance diamond problem&lt;/a&gt; for state. For code, the diamond problem is solved by the compiler requiring additional members in ambiguous cases (which can then call the appropriate base).&lt;/p&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;In this article, we looked at C# 8 default interface methods. Default interface methods provide a way to extend interfaces with new members without breaking previous implementers. The new features also allow code to be shared between types, which enables &lt;a href="https://en.wikipedia.org/wiki/Multiple_inheritance" target="_blank" rel="noopener noreferrer"&gt;multiple inheritance&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Trait_(computer_programming)" target="_blank" rel="noopener noreferrer"&gt;trait&lt;/a&gt; patterns.  In the next article, we will look at nullable reference types.&lt;/p&gt; &lt;p&gt;C# 8 can be used with the .NET Core 3.1 SDK, which is available on &lt;a href="https://access.redhat.com/documentation/en-us/net_core/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Enterprise Linux&lt;/a&gt;, &lt;a href="http://fedoraloves.net/" target="_blank" rel="noopener noreferrer"&gt;Fedora&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download" target="_blank" rel="noopener noreferrer"&gt;Windows, macOS, and other Linux distributions&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#38;linkname=C%23%208%20default%20interface%20methods" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F03%2F03%2Fc-8-default-interface-methods%2F&amp;#038;title=C%23%208%20default%20interface%20methods" data-a2a-url="https://developers.redhat.com/blog/2020/03/03/c-8-default-interface-methods/" data-a2a-title="C# 8 default interface methods"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/03/03/c-8-default-interface-methods/"&gt;C# 8 default interface methods&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/dN-cN9e3-OY" height="1" width="1" alt=""/&gt;</content><summary>In the previous articles, we discussed C# 8 async streams and pattern matching. In this article, we’ll look at C# 8 default interface methods. Extending interfaces Before C# 8, it was not possible to add members to an interface without breaking the classes that implement the interface. Because interface members were abstract, classes needed to provide an implementation. C# 8 allows us to extend an...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2020-03-03T08:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/03/03/c-8-default-interface-methods/</feedburner:origLink></entry><entry><title>Voxxed Days Milan 2020 - 5 Questions Everyone Ignores with Microservices (accepted)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vR2ILOkqgyw/voxxed-days-milan-2020-5-questions-everyone-ignores-microservices-accepted.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-voxxed_days_milan_2020_5_questions_everyone_ignores_with_microservices_accepted</id><updated>2020-03-02T12:10:25Z</updated><published>2020-03-02T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://voxxeddays.com/milan/" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="voxxed days milan" border="0" data-original-height="606" data-original-width="1576" height="123" src="https://1.bp.blogspot.com/-MoUUJCrGpeE/XdubNVK78EI/AAAAAAAAwvA/my1eyzVW_sABLEpISOicuNQNhHkn5jtHgCNcBGAsYHQ/s320/Screenshot%2B2019-11-25%2Bat%2B10.06.53.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Previously &lt;a href="https://www.schabell.org/2019/11/voxxed-days-milan-2020-open-career-microservice-questions-devops-heroes.html" target="_blank"&gt;posted that I've pushed a few talks&lt;/a&gt; to the Voxxed Days Milan 2020 and this last week I got the first accept back. &lt;br /&gt;&lt;br /&gt;&lt;a href="https://voxxeddays.com/milan/" target="_blank"&gt;Voxxed Days Milan 2020&lt;/a&gt; shall be hosted on a single day, May 16th 2020 in Milan, Italy. All talks are going to be recorded and published online. You can enjoy previous’ year edition of Voxxed Days Milan 2019 recordings &lt;a href="https://www.youtube.com/playlist?list=PLRsbF2sD7JVpfbaiBoeCOCMCWxSTuuZ5c"&gt;here&lt;/a&gt;. Even those not at Voxxed Days Milan can watch them, but the real fun was being there.&lt;br /&gt;&lt;br /&gt;I'm really looking forward to visiting this wonderful city full of history and vibrant life, but there is one thing that might be throwing a bit of a wrench in the works. &lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;It's probably not gone unnoticed, but there is an outbreak of a virus currently hitting the northern regions of Italy. The &lt;a href="https://www.internationalsos.com/" target="_blank"&gt;InternationalSOS&lt;/a&gt; organization put out an &lt;i&gt;Advisory: Italy - Cluster of COVID-19 in Lombardy.&lt;/i&gt; Milan is right in this zone so currently it's not advisabled to travel to Milan.&lt;br /&gt;&lt;br /&gt;Luckily, this conference is not happening until May 15th, so until then we continue to monitor the status of this situation. My fingers are crossed and hoping for the best.&lt;br /&gt;&lt;br /&gt;The talk that got accepted is an in depth look at the challenges that rise to the top of organizations implementing microservices.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; margin: 0px; position: relative;"&gt;5 Questions Everyone Ignores with Microservices&lt;/h3&gt;&lt;i style="background-color: white; color: #444444; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px;"&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. Funny enough, when discussing the development impact while transitioning to microservices, there are five questions that keep popping up. This session covers the questions that everyone should ask about microservices. Join us for an hour of power, where real life developer experiences are used to highlight the lessons we're all learning as we transition our integration infrastructure into modern day microservices.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Hoping that the people of Milan remain safe and that we can get through to a successful Voxxed Days 2020.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=o5w21R7sCuc:4LWC2FfhsWk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=o5w21R7sCuc:4LWC2FfhsWk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=o5w21R7sCuc:4LWC2FfhsWk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=o5w21R7sCuc:4LWC2FfhsWk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=o5w21R7sCuc:4LWC2FfhsWk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/o5w21R7sCuc" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vR2ILOkqgyw" height="1" width="1" alt=""/&gt;</content><summary>Previously posted that I've pushed a few talks to the Voxxed Days Milan 2020 and this last week I got the first accept back. Voxxed Days Milan 2020 shall be hosted on a single day, May 16th 2020 in Milan, Italy. All talks are going to be recorded and published online. You can enjoy previous’ year edition of Voxxed Days Milan 2019 recordings here. Even those not at Voxxed Days Milan can watch them,...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-03-02T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/o5w21R7sCuc/voxxed-days-milan-2020-5-questions-everyone-ignores-microservices-accepted.html</feedburner:origLink></entry><entry><title>Debugging components in OpenShift using VS Code</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/S3areOjMAtQ/" /><category term="Component" scheme="searchisko:content:tags" /><category term="debug" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="odo" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Mohit Suman</name></author><id>searchisko:content:id:jbossorg_blog-debugging_components_in_openshift_using_vs_code</id><updated>2020-02-28T08:00:04Z</updated><published>2020-02-28T08:00:04Z</published><content type="html">&lt;p&gt;The latest release of &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;OpenShift Connector&lt;/a&gt; enhances the developer experience on &lt;a href="http://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift&lt;/a&gt; with support for local code debugging. This enhancement lets the user write and debug local code without leaving the editor.&lt;/p&gt; &lt;p&gt;Based on developer community feedback related to OpenShift Connector for Visual Studio Code (VS Code), one of the main focuses was to simplify the OpenShift workflow for developers by letting them debug code that is deployed on OpenShift directly from VS Code. Visual Studio Code&amp;#8217;s debugging architecture allows extension authors to easily integrate existing debuggers into VS Code while offering a common user interface for all of them.&lt;/p&gt; &lt;p&gt;Following this principle, we added a new debug feature to our OpenShift extension for VS Code. This feature allows debugging local NodeJS and Java components deployed on an OpenShift instance directly from the IDE.&lt;/p&gt; &lt;p&gt;This feature is available to the community from version 0.1.3 onwards and the extension can be installed from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;VS Code Marketplace&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;How does it work?&lt;/h2&gt; &lt;p&gt;This release provides the new &lt;code&gt;OpenShift: Debug&lt;/code&gt; command, which provides a simpler way to start debugging OpenShift components pushed to a cluster.&lt;/p&gt; &lt;p&gt;&lt;code&gt;OpenShift: Debug&lt;/code&gt; is an experimental feature that uses the experimental OpenShift Do (&lt;code&gt;odo&lt;/code&gt;) &lt;code&gt;debug&lt;/code&gt; command under the hood. This enhancement allows developers to set breakpoints directly in the source code, watch variables, and follow the full call stack when debugging—all without leaving the editor.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The debug feature is supported only for components created using &lt;code&gt;local workspace&lt;/code&gt; and deployed on OpenShift. Components created using &lt;code&gt;Git Repository&lt;/code&gt; and &lt;code&gt;Binary File&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; supported.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;debug&lt;/code&gt; command can be invoked in following ways:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Using the &lt;strong&gt;Command Palette&lt;/strong&gt; [OpenShift: Debug] (Figure 1)&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_687217" style="width: 447px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-687217" class="wp-image-687217" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.30.01-AM.png" alt="openshift-connector-debug-command-palette" width="437" height="73" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.30.01-AM.png 1580w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.30.01-AM-300x50.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.30.01-AM-768x128.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.30.01-AM-1024x171.png 1024w" sizes="(max-width: 437px) 100vw, 437px" /&gt;&lt;p id="caption-attachment-687217" class="wp-caption-text"&gt;Figure 1: Accessing the &lt;code&gt;OpenShift: Debug&lt;/code&gt; command through the command palette.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;2. Using &lt;strong&gt;OpenShift Application Explorer&lt;/strong&gt; view. User needs to go to the context menu for component nodes and select &lt;code&gt;Debug&lt;/code&gt; action as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_687237" style="width: 340px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-687237" class="wp-image-687237" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.35.40-AM.png" alt="openshift-connector-debug-context-menu" width="330" height="392" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.35.40-AM.png 852w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.35.40-AM-253x300.png 253w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/Screenshot-2020-02-20-at-4.35.40-AM-768x912.png 768w" sizes="(max-width: 330px) 100vw, 330px" /&gt;&lt;p id="caption-attachment-687237" class="wp-caption-text"&gt;Figure 2: Accessing the &lt;code&gt;OpenShift: Debug&lt;/code&gt; command through the &lt;strong&gt;OpenShift Application Explorer&lt;/strong&gt; view.&lt;/p&gt;&lt;/div&gt; &lt;h3 id="_debug-serverside-javascript-in-nodejs" data-needslink="_debug-serverside-javascript-in-nodejs"&gt;Debug a NodeJS component in OpenShift&lt;/h3&gt; &lt;p&gt;The default Visual Studio Code installation includes JavaScript/TypeScript language support and the debugger extensions required to debug a NodeJS component. That means that the new &lt;code&gt;OpenShift: Debug&lt;/code&gt; command can be used without installing any additional extensions. To get started:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Install OpenShift Connector from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;marketplace&lt;/a&gt; or from the &lt;strong&gt;Extensions&lt;/strong&gt; icon in VS Code.&lt;/li&gt; &lt;li&gt;Log into the running OpenShift cluster.&lt;/li&gt; &lt;li&gt;Create a NodeJS component from the local workspace and deploy it in OpenShift.&lt;/li&gt; &lt;li&gt;Perform the debugging actions as shown in the video below, which shows a detailed walk-through of the workflow for debugging a local NodeJS component on OpenShift:&lt;/li&gt; &lt;/ol&gt; &lt;div style="width: 640px;" class="wp-video"&gt;&lt;!--[if lt IE 9]&gt;&lt;script&gt;document.createElement('video');&lt;/script&gt;&lt;![endif]--&gt; &lt;video class="wp-video-shortcode" id="video-685777-1" width="640" height="360" preload="metadata" controls="controls"&gt;&lt;source type="video/mp4" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/debug-node2.mp4?_=1" /&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/02/debug-node2.mp4"&gt;https://developers.redhat.com/blog/wp-content/uploads/2020/02/debug-node2.mp4&lt;/a&gt;&lt;/video&gt;&lt;/div&gt; &lt;h3 id="_debug-serverside-javascript-in-nodejs" data-needslink="_debug-serverside-javascript-in-nodejs"&gt;Debug a Java component in OpenShift&lt;/h3&gt; &lt;p&gt;To debug a Java component, the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.java" target="_blank" rel="noopener noreferrer"&gt;Java Language Support&lt;/a&gt; and &lt;a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-debug" target="_blank" rel="noopener noreferrer"&gt;Java Debugger&lt;/a&gt; extensions are required. Therefore, the OpenShift Connector extension will prompt you to install the missing extension(s) before launching the debugger for a Java component. To get started:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Install OpenShift Connector from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;marketplace&lt;/a&gt; or from the &lt;strong&gt;Extensions&lt;/strong&gt; icon in VS Code.&lt;/li&gt; &lt;li&gt;Log into the running OpenShift cluster.&lt;/li&gt; &lt;li&gt;Create a Java component from the local workspace and deploy it in OpenShift.&lt;/li&gt; &lt;li&gt;Perform the debugging actions as shown in the video below, which shows a detailed walk-through of the workflow for debugging a local Java component on OpenShift:&lt;/li&gt; &lt;/ol&gt; &lt;div style="width: 640px;" class="wp-video"&gt;&lt;video class="wp-video-shortcode" id="video-685777-2" width="640" height="360" preload="metadata" controls="controls"&gt;&lt;source type="video/mp4" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/debug-java2.mp4?_=2" /&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/02/debug-java2.mp4"&gt;https://developers.redhat.com/blog/wp-content/uploads/2020/02/debug-java2.mp4&lt;/a&gt;&lt;/video&gt;&lt;/div&gt; &lt;h3 id="_feedback" data-needslink="_feedback"&gt;Feedback&lt;/h3&gt; &lt;p&gt;We’ve released this extension on &lt;a class="external-link" href="https://github.com/redhat-developer/vscode-openshift-tools" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt; as an MIT-licensed open source project, and the extension is available in the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector" target="_blank" rel="noopener noreferrer"&gt;VS Code Marketplace&lt;/a&gt;. We really want your feedback and help to build an even better debugging experience. If you have any issues or ideas for improvements, feel free to reach out to us on &lt;a class="external-link" href="https://gitter.im/redhat-developer/openshift-connector" target="_blank" rel="noopener noreferrer"&gt;Gitter&lt;/a&gt; or &lt;a class="external-link" href="https://github.com/redhat-developer/vscode-openshift-tools" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p style="text-align: left;"&gt;Look out for more awesome features in the next releases!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#38;linkname=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F28%2Fdebugging-components-in-openshift-using-vs-code%2F&amp;#038;title=Debugging%20components%20in%20OpenShift%20using%20VS%20Code" data-a2a-url="https://developers.redhat.com/blog/2020/02/28/debugging-components-in-openshift-using-vs-code/" data-a2a-title="Debugging components in OpenShift using VS Code"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/28/debugging-components-in-openshift-using-vs-code/"&gt;Debugging components in OpenShift using VS Code&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/S3areOjMAtQ" height="1" width="1" alt=""/&gt;</content><summary>The latest release of OpenShift Connector enhances the developer experience on Red Hat OpenShift with support for local code debugging. This enhancement lets the user write and debug local code without leaving the editor. Based on developer community feedback related to OpenShift Connector for Visual Studio Code (VS Code), one of the main focuses was to simplify the OpenShift workflow for develope...</summary><dc:creator>Mohit Suman</dc:creator><dc:date>2020-02-28T08:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/28/debugging-components-in-openshift-using-vs-code/</feedburner:origLink></entry><entry><title>Upcoming Webinar - What's new in Apache Camel 3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wmnlg7bqX9k/upcoming-webinar-whats-new-in-apache.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="webinar" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-upcoming_webinar_what_s_new_in_apache_camel_3</id><updated>2020-02-27T10:17:06Z</updated><published>2020-02-27T10:17:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;On March 3rd, at 3pm CET (Central European Timezone) I will co-host, together with Andrea Cosentino, a webinar session for 1 hour, where we cover all the great new features that are in the Apache Camel v3 release.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://www.redhat.com/en/events/webinar/apache-camel-3-here-whats-new?sc_cid=7013a000002DMQhAAO"&gt;&lt;img border="0" data-original-height="223" data-original-width="691" height="128" src="https://1.bp.blogspot.com/-krFtYasaT7k/XleWhQqG-nI/AAAAAAAACF4/AjjTNFmVuvc8MguZzk6CQhegddBsendnQCLcBGAsYHQ/s400/camel3-is-here.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Andrea and I will cover in more details the high level goals of Apache Camel 3, and focus on the key elements about making Camel smaller, lighter, and faster for the cloud native world. So you will find details about what we have done internally to make this happen.&lt;br /&gt;&lt;br /&gt;We also cover and introduce Camel K, Camel Quarkus and Camel Kafka Connector where we have 4 live demos ready for you. And finally we present the roadmap for the upcoming releases.&lt;br /&gt;&lt;br /&gt;At the end we have Q&amp;amp;A session where we will assist and answer as many questions you may have.&lt;br /&gt;&lt;br /&gt;The webinar is free to attend, but requires registration, as the webinar is run by professional media company.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://www.redhat.com/en/events/webinar/apache-camel-3-here-whats-new?sc_cid=7013a000002DMQhAAO"&gt;More details and registration here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;PS: Yes we will cover details up till the latest Camel 3.1 release which is going to be released today ;)&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=wtZgLyOdGzU:7DaY-Q5dlMQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=wtZgLyOdGzU:7DaY-Q5dlMQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=wtZgLyOdGzU:7DaY-Q5dlMQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/wtZgLyOdGzU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wmnlg7bqX9k" height="1" width="1" alt=""/&gt;</content><summary>On March 3rd, at 3pm CET (Central European Timezone) I will co-host, together with Andrea Cosentino, a webinar session for 1 hour, where we cover all the great new features that are in the Apache Camel v3 release. Andrea and I will cover in more details the high level goals of Apache Camel 3, and focus on the key elements about making Camel smaller, lighter, and faster for the cloud native world. ...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2020-02-27T10:17:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/wtZgLyOdGzU/upcoming-webinar-whats-new-in-apache.html</feedburner:origLink></entry><entry><title>C# 8 pattern matching</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/la8A9T1dlag/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="C#" scheme="searchisko:content:tags" /><category term="C# 8" scheme="searchisko:content:tags" /><category term="case" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="pattern matching" scheme="searchisko:content:tags" /><category term="switch" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-c_8_pattern_matching</id><updated>2020-02-27T08:00:04Z</updated><published>2020-02-27T08:00:04Z</published><content type="html">&lt;p&gt;In the previous article, we looked at &lt;a href="https://developers.redhat.com/blog/2020/02/24/c-8-asynchronous-streams/"&gt;C# 8 asynchronous streams&lt;/a&gt;. Another new C# 8 feature is extended support for pattern matching. In this article, we’ll take a look at what was possible with C# 7 and what was added in C# 8.&lt;/p&gt; &lt;h2&gt;C# 7 pattern matching&lt;/h2&gt; &lt;p&gt;Pattern matching is a feature that was introduced in C# 7. It allows you to check whether an object is of a particular type and check its value in a concise way through the use of &lt;code&gt;is&lt;/code&gt; patterns and &lt;code&gt;case&lt;/code&gt; patterns.&lt;/p&gt; &lt;h3&gt;The &lt;code&gt;is&lt;/code&gt; pattern&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;is&lt;/code&gt; pattern allows you to check whether a variable is of a certain type, and then assign it to a new variable. Further checks can then be made on that variable:&lt;/p&gt; &lt;pre&gt;if (input is int count &amp;#38;&amp;#38; count &amp;#62; 100) &lt;/pre&gt; &lt;p&gt;This pattern can also be used to check if a variable is &lt;code&gt;null&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;if (input is null) &lt;/pre&gt; &lt;p&gt;This second statement is guaranteed to do a &lt;code&gt;null&lt;/code&gt; reference check. When you use &lt;code&gt;== null&lt;/code&gt;, the &lt;code&gt;operator==&lt;/code&gt; might be overloaded, causing a different check to be performed.&lt;/p&gt; &lt;h3&gt;The &lt;code&gt;case&lt;/code&gt; pattern&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;switch&lt;/code&gt; statement cases also support patterns. These patterns can include a type check, plus additional conditions:&lt;/p&gt; &lt;pre&gt;switch (i) { case int n when n &amp;#62; 100: ... case Car c: ... case null: ... case var j when (j.Equals(10)): ... default: ... } &lt;/pre&gt; &lt;p&gt;In the examples above, you see the &lt;code&gt;case&lt;/code&gt; statement for &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, a type check, conditions, and using conditions without a type check (&lt;code&gt;case var&lt;/code&gt;). Note that &lt;code&gt;case var&lt;/code&gt; can also match &lt;code&gt;null&lt;/code&gt;, so to avoid that happening we’ve placed it below &lt;code&gt;case null&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The classic &lt;code&gt;switch&lt;/code&gt; statement allowed only constants. Because of the dynamic conditions, the order of pattern cases matters.&lt;/p&gt; &lt;h2&gt;C# 8 pattern matching&lt;/h2&gt; &lt;p&gt;C# 8 expands the support for patterns and where they can be used.&lt;/p&gt; &lt;h3&gt;&lt;code&gt;switch&lt;/code&gt; expressions&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; expression is a concise way to return a specific value based on another value:&lt;/p&gt; &lt;pre&gt;var rgbColor = knownColor switch { KnownColor.Red =&amp;#62; new RGBColor(0xFF, 0x00, 0x00), KnownColor.Green =&amp;#62; new RGBColor(0x00, 0xFF, 0x00), ... _ =&amp;#62; throw new ArgumentException(message: "invalid enum value", paramName: nameof(knownColor)), }; &lt;/pre&gt; &lt;p&gt;A regular &lt;code&gt;switch&lt;/code&gt; does not return a value. This syntax is more concise. There are no &lt;code&gt;case&lt;/code&gt; keywords, and the &lt;code&gt;default&lt;/code&gt; case was replaced with a discard (&lt;code&gt;_&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;The &lt;code&gt;case&lt;/code&gt; conditions can be patterns. It’s not possible to include statements for handling a case. For each case, a single expression must be provided that represents the resulting value. This expression can be a &lt;code&gt;switch&lt;/code&gt; expression.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s also possible to start from multiple input values by collecting them into a tuple:&lt;/p&gt; &lt;pre&gt;public decimal GetDiscount(CustomerType customer, DiscountPeriod period) =&amp;#62; (customer, period) switch { (CustomerType.Gold, DiscountPeriod.Christmas) =&amp;#62; 0.2m, (CustomerType.Silver, DiscountPeriod.Christmas) =&amp;#62; 0.1m, (_, DiscountPeriod.Christmas) =&amp;#62; 0.05m, (_, _) =&amp;#62; 0m, }; &lt;/pre&gt; &lt;p&gt;The conditions for the &lt;code&gt;switch&lt;/code&gt; are now also tuples. Their items have patterns that are matched against the corresponding input tuple element.nIn the example, we&amp;#8217;ve used the discard (&lt;code&gt;_&lt;/code&gt;) to ignore a tuple item. Other patterns can also be used.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;is&lt;/code&gt; keyword can also be used with tuple patterns.&lt;/p&gt; &lt;p&gt;Tuple patterns can also be used against types that are &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#tuples" target="_blank" rel="noopener noreferrer"&gt;deconstructable to a tuple&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;static Sector GetSector(Point point) =&amp;#62; point switch { (0, 0) =&amp;#62; Sector.Origin, (2, _) =&amp;#62; Sector.One, var (x, y) when x &amp;#62; 0 &amp;#38;&amp;#38; y &amp;#62; 0 =&amp;#62; Sector.Two, (1, var y) when y &amp;#60; 0 =&amp;#62; Sector.Three, _ =&amp;#62; Sector.Unknown }; &lt;/pre&gt; &lt;h3&gt;Property patterns&lt;/h3&gt; &lt;p&gt;Property patterns express a property that needs to have a specific constant value:&lt;/p&gt; &lt;pre&gt;switch (location) { case { State: "MN" }: ... } &lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;case&lt;/code&gt; will match when &lt;code&gt;location.State&lt;/code&gt; equals &lt;code&gt;MN&lt;/code&gt;. Property patterns can be used in switch expressions also.&lt;/p&gt; &lt;p&gt;A special case is the &lt;code&gt;{ }&lt;/code&gt; pattern, which means: not &lt;code&gt;null&lt;/code&gt;. This pattern can also be used with the &lt;code&gt;is&lt;/code&gt; keyword:&lt;/p&gt; &lt;pre&gt;if (location is { State: ”MN” }) &lt;/pre&gt; &lt;p&gt;We can check both on the type and property, for example:&lt;/p&gt; &lt;pre&gt;switch (vehicle) { case Taxi { Occupants: 2 } t: ... } &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we’ve looked at C#’s support for pattern matching. Pattern matching provides us with a concise syntax match against a type, checks properties, and combines these patterns with additional conditions.&lt;/p&gt; &lt;p&gt;C# 8 can be used with the .NET Core 3.1 SDK, which is available on &lt;a href="https://access.redhat.com/documentation/en-us/net_core/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Enterprise Linux&lt;/a&gt;, &lt;a href="http://fedoraloves.net/" target="_blank" rel="noopener noreferrer"&gt;Fedora&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download" target="_blank" rel="noopener noreferrer"&gt;Windows, macOS, and other Linux distributions&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#038;title=C%23%208%20pattern%20matching" data-a2a-url="https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/" data-a2a-title="C# 8 pattern matching"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/"&gt;C# 8 pattern matching&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/la8A9T1dlag" height="1" width="1" alt=""/&gt;</content><summary>In the previous article, we looked at C# 8 asynchronous streams. Another new C# 8 feature is extended support for pattern matching. In this article, we’ll take a look at what was possible with C# 7 and what was added in C# 8. C# 7 pattern matching Pattern matching is a feature that was introduced in C# 7. It allows you to check whether an object is of a particular type and check its value in a con...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2020-02-27T08:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/</feedburner:origLink></entry><entry><title>Red Hat simplifies container development and redistribution of RHEL packages</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lHzz8NP_w1Q/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Partners" scheme="searchisko:content:tags" /><category term="Red Hat Container Certification" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="UBI" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_simplifies_container_development_and_redistribution_of_rhel_packages</id><updated>2020-02-26T14:00:46Z</updated><published>2020-02-26T14:00:46Z</published><content type="html">&lt;p&gt;Now, application developers in the &lt;a href="https://developers.redhat.com/techpartner/"&gt;Red Hat Technology Partner&lt;/a&gt; program can build their container apps and redeploy from the full set of Red Hat Enterprise Linux (RHEL) user space packages (non-kernel). This nearly triples the number of packages over UBI only.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;When we &lt;/span&gt;&lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;introduced&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; Red Hat Universal Base Images (UBI) in May 2019, we provided Red Hat partners the ability to freely use and redistribute a substantial number of RHEL packages that can be deployed on both Red Hat and non-Red Hat platforms. This gave developers the ability to build safe, secure, and portable container-based software that could then be deployed anywhere. The feedback on this has been overwhelmingly positive and we thank you for it, but we learned that you needed more, so we’re sharing this advanced preview with Red Hat Partner Connect members to help you with your planning. &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Expanded and exclusive redistribution rights for Red Hat Technology Partners&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We are pleased to &lt;a href="http://redhat.com/en/about/press-releases/red-hat-extends-partner-offerings-drive-open-hybrid-cloud-innovation" target="_blank" rel="noopener noreferrer"&gt;announce&lt;/a&gt; expanded partner &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;terms and conditions &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;that grant Red Hat Technology Partners free use and redistribution rights to all Red Hat Enterprise Linux user space packages when you build upon UBI-based images&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;. With more than triple the number of RHEL packages now available, you can simplify your container and Operator development and freely re-distribute your container-based software through both Red Hat and non-Red Hat registries. This is only available to Red Hat partners who participate in and complete &lt;a href="https://connect.redhat.com/resources/container-certification-overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat Container Certification&lt;/a&gt;.&lt;/span&gt;&lt;span id="more-688767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Get started&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To use and redistribute all RHEL user space packages, &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Partner Connect members that &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;are &lt;a href="https://connect.redhat.com/partner-with-us/red-hat-container-certification" target="_blank" rel="noopener noreferrer"&gt;enrolled in the Red Hat Container Certification program&lt;/a&gt; need to accept the updated Container Appendix and agree to certify their software via the program. Containers will need to be built on a RHEL container host with an active subscription in order to access all of the applicable RHEL packages.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;FAQs&lt;/b&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;What are the specific requirements that partners have to meet to take advantage of the expanded scope of Red Hat Container Certification?&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;Partner container images must use the RHEL 7 UBI or RHEL 8 UBI as a base image.&lt;/li&gt; &lt;li&gt;Partners must accept the &lt;a href="https://developers.redhat.com/techpartner/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Technology Partner&lt;/a&gt; Connect agreement. There is no change to the current agreement, so if it is already signed there is no need to re-sign it.&lt;/li&gt; &lt;li&gt;Partners must participate in Red Hat Container Certification, which means accepting the updated Container Appendix terms as part of the certification workflow and completing the container certification. This updated Container Appendix grants use of all RHEL packages except the kernel, as long as the resulting work does not constitute a material reproduction of a commercial Red Hat product.&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;How is this expanded scope different than Red Hat Universal Base Images (UBI)?&lt;/strong&gt;&lt;br /&gt; Anyone can use and redistribute UBI packages. Whether they have a Red Hat Enterprise Linux subscription or not. UBI, which is based on RHEL, is a subset of RHEL user space packages. This announcement lets Red Hat Technology Partners use and redistribute all RHEL user space packages, including UBI.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;What’s different in the certification workflow? &lt;/strong&gt;&lt;br /&gt; There is no change to how you submit your software to be certified.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;What changes occur to coding practices?&lt;/strong&gt;&lt;br /&gt; None. Keep using UBI base images as you are today. Add any user space packages needed from the various RHEL repos.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Has the UBI changed to include RHEL kernel? &lt;/strong&gt;&lt;br /&gt; No, UBI is the same and anyone can use and freely redistribute UBI-based images whether they have a Red Hat subscription or not. This updated partner agreement lets technology partners use and redistribute any RHEL user space package built from UBI-based images.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;b&gt;Resources&lt;/b&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://connect.redhat.com/partner-with-us/red-hat-container-certification" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Container Certification&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://rhc4tp-cms-prod-vpc-76857813.s3.amazonaws.com/s3fs-public/RH-Container-Cert-Datasheet-US%20%281%29.pdf" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Container Certification datasheet&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://redhat-connect.gitbook.io/partner-guide-for-red-hat-openshift-and-container/" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Container Certification Partner Guide&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://developers.redhat.com/products/rhel/ubi/" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Universal Base Image UBI page&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; and &lt;/span&gt;&lt;a href="https://developers.redhat.com/articles/ubi-faq/" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;UBI FAQ&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; &lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/techpartner/" target="_blank" rel="noopener noreferrer"&gt;Learn about becoming Red Hat partner&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;If you’d like to learn more, &lt;/span&gt;&lt;a href="https://www.brighttalk.com/webcast/14777/384281?utm_source=Red+Hat&amp;#38;utm_medium=brighttalk&amp;#38;utm_campaign=384281" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;join&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; us for our March 18 webinar &amp;#8220;Simplified container development and redistribution with RHEL,&amp;#8221; where we’ll discuss how these expanded redistribution capabilities augment your software development and business. &lt;/span&gt;&lt;a href="https://www.brighttalk.com/webcast/14777/384281?utm_source=Red+Hat&amp;#38;utm_medium=brighttalk&amp;#38;utm_campaign=384281" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Register&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; today.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#038;title=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" data-a2a-url="https://developers.redhat.com/blog/2020/02/26/red-hat-simplifies-container-dev-and-redistribution-rhel-packages/" data-a2a-title="Red Hat simplifies container development and redistribution of RHEL packages"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/26/red-hat-simplifies-container-dev-and-redistribution-rhel-packages/"&gt;Red Hat simplifies container development and redistribution of RHEL packages&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lHzz8NP_w1Q" height="1" width="1" alt=""/&gt;</content><summary>Now, application developers in the Red Hat Technology Partner program can build their container apps and redeploy from the full set of Red Hat Enterprise Linux (RHEL) user space packages (non-kernel). This nearly triples the number of packages over UBI only. When we introduced Red Hat Universal Base Images (UBI) in May 2019, we provided Red Hat partners the ability to freely use and redistribute a...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2020-02-26T14:00:46Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/26/red-hat-simplifies-container-dev-and-redistribution-rhel-packages/</feedburner:origLink></entry><entry><title>Speed up Maven builds in Tekton Pipelines</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uhVVkpYW8IQ/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Maven" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="pipelines" scheme="searchisko:content:tags" /><category term="Tekton" scheme="searchisko:content:tags" /><category term="workspaces" scheme="searchisko:content:tags" /><author><name>Siamak Sadeghianfar</name></author><id>searchisko:content:id:jbossorg_blog-speed_up_maven_builds_in_tekton_pipelines</id><updated>2020-02-26T08:00:07Z</updated><published>2020-02-26T08:00:07Z</published><content type="html">&lt;p&gt;&lt;a href="https://tekton.dev" target="_blank" rel="noopener noreferrer"&gt;Tekton&lt;/a&gt; is an open source project that provides standard Kubernetes-style resources and building blocks for creating CI/CD pipelines that can run on any Kubernetes. Tekton does this by introducing a number of custom resource definitions (CRD) such as &lt;code&gt;Pipeline&lt;/code&gt;, &lt;code&gt;Task&lt;/code&gt;, and &lt;code&gt;ClusterTask&lt;/code&gt; to provide a language and structure for defining delivery pipelines as shown in Figure 1. Tekton also provides a set of controllers that are responsible for running pipelines in pods on demand whenever a user creates an aforementioned resource.&lt;/p&gt; &lt;div id="attachment_683427" style="width: 416px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683427" class="wp-image-683427 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image2.png" alt="Diagram of a Pipeline containing a Task workflow." width="406" height="139" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image2.png 406w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image2-300x103.png 300w" sizes="(max-width: 406px) 100vw, 406px" /&gt;&lt;p id="caption-attachment-683427" class="wp-caption-text"&gt;Figure 1: A Tekton pipeline contains a sequence of tasks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The use of Tekton has grown rapidly over the last year. One of the frequently requested features is the ability to share artifacts between tasks in order to cache dependencies for build tools such as Maven and NPM. Although it was possible previously to use volumes in tasks, the release of Tekton 0.10 adds support for workspaces, which makes it easier for tasks within a pipeline to share artifacts using a persistent volume.&lt;/p&gt; &lt;p&gt;In this article, we look at how workspaces can be used to cache Maven dependencies in Java builds in order to remove the need to download dependencies for each build.&lt;/p&gt; &lt;p&gt;&lt;span id="more-683407"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Tekton workspaces&lt;/h2&gt; &lt;p&gt;&lt;em&gt;Workspaces&lt;/em&gt; in Tekton Pipelines refers to a declaration of shared volumes that a pipeline needs at runtime. They are similar to volumes except that one doesn’t provide the actual volume and only declares the intent. In a pipeline definition, a workspace can then be passed to relevant tasks as a shared volume. The result is that when the same workspace is provided to a number of tasks, they all can read and write from the exact same volume and share files and artifacts as required.&lt;/p&gt; &lt;p&gt;It’s worth mentioning that although a volume refers to a persistent volume for caching Maven dependencies, it can also be a &lt;code&gt;ConfigMap&lt;/code&gt;, or a secret that is passed to a pipeline run to be mounted and shared between the tasks.&lt;/p&gt; &lt;p&gt;Let’s see how workspaces can be used in practice to cache Maven dependencies.&lt;/p&gt; &lt;h2&gt;Maven task with a workspace&lt;/h2&gt; &lt;p&gt;In order to build Maven projects in a pipeline, a Maven task should be defined. The Tekton catalog already contains a &lt;a href="https://github.com/tektoncd/catalog/tree/master/maven" target="_blank" rel="noopener noreferrer"&gt;Maven task&lt;/a&gt;. However, we need a modified version of this task to declare a workspace for Maven&amp;#8217;s dependencies:&lt;/p&gt; &lt;pre&gt;apiVersion: tekton.dev/v1alpha1 kind: Task metadata: name: mvn spec: workspaces: - name: maven-repo inputs: params: - name: GOALS description: The Maven goals to run type: array default: ["package"] resources: - name: source type: git steps: - name: mvn image: gcr.io/cloud-builders/mvn workingDir: /workspace/source command: ["/usr/bin/mvn"] args: - -Dmaven.repo.local=$(workspaces.maven-repo.path) - "$(inputs.params.GOALS)" &lt;/pre&gt; &lt;p&gt;This task is mostly similar to the one in the Tekton catalog, with the difference being that a workspace called &lt;code&gt;maven-repo&lt;/code&gt; is defined. This workspace states that whenever this task is to run, a volume should be provided and mounted to act as the local Maven repository. The path to this workspace is then passed to the Maven command in order to be used as the local Maven repository with &lt;code&gt;-Dmaven.repo.local=$(workspaces.maven-repo.path)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The path where the workspace should be mounted can be configured; however, in this example, the default mount path is adequate.&lt;/p&gt; &lt;h2&gt;Build a pipeline with a workspace&lt;/h2&gt; &lt;p&gt;Now, let’s define a pipeline that uses the Maven task to build a Java application. In order to demonstrate the caching effect for Maven dependencies, the following pipeline (shown in Figure 2) runs three Maven tasks to perform the build, integrate the tasks, and generate a report for the test results, code coverage, etc.&lt;/p&gt; &lt;div id="attachment_683447" style="width: 370px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683447" class="wp-image-683447 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image4.png" alt="Diagram showing the Maven build pipeline's workflow" width="360" height="173" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image4.png 360w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image4-300x144.png 300w" sizes="(max-width: 360px) 100vw, 360px" /&gt;&lt;p id="caption-attachment-683447" class="wp-caption-text"&gt;Figure 2: An example Tekton Maven build pipeline.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The pipeline definition that represents the pipeline in Figure 2 is:&lt;/p&gt; &lt;pre&gt;apiVersion: tekton.dev/v1alpha1 kind: Pipeline metadata: name: maven-build spec: workspaces: - name: local-maven-repo resources: - name: app-git type: git tasks: - name: build taskRef: name: mvn resources: inputs: - name: source resource: app-git params: - name: GOALS value: ["package"] workspaces: - name: maven-repo workspace: local-maven-repo - name: int-test taskRef: name: mvn runAfter: ["build"] resources: inputs: - name: source resource: app-git params: - name: GOALS value: ["verify"] workspaces: - name: maven-repo workspace: local-maven-repo - name: gen-report taskRef: name: mvn runAfter: ["build"] resources: inputs: - name: source resource: app-git params: - name: GOALS value: ["site"] workspaces: - name: maven-repo workspace: local-maven-repo &lt;/pre&gt; &lt;p&gt;Notice the declaration of the pipeline&amp;#8217;s &lt;code&gt;local-maven-repo&lt;/code&gt; workspace. It states that when this pipeline is to run, a volume should be provided and used as this workspace. This workspace is then provided to each of the tasks in this pipeline so that they all share the same workspace.&lt;/p&gt; &lt;h2&gt;Run a Maven pipeline&lt;/h2&gt; &lt;p&gt;The pipeline now can be run to build a Java application such as the &lt;a href="https://github.com/spring-projects/spring-petclinic" target="_blank" rel="noopener noreferrer"&gt;Spring PetClinic&lt;/a&gt; sample application. Before starting the pipeline, a &lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims" target="_blank" rel="noopener noreferrer"&gt;&lt;code&gt;PersistentVolumeClaim&lt;/code&gt; (PVC)&lt;/a&gt; is needed for providing a workspace to cache the Maven dependencies:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 kind: PersistentVolumeClaim metadata: name: maven-repo-pvc spec: resources: requests: storage: 5Gi volumeMode: Filesystem accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Retain &lt;/pre&gt; &lt;p&gt;Now you can create a pipeline run that uses the above PVC as the pipeline&amp;#8217;s workspace:&lt;/p&gt; &lt;pre&gt;apiVersion: tekton.dev/v1alpha1 kind: PipelineRun metadata: generateName: petclinic-run- spec: pipelineRef: name: maven-build resources: - name: app-git resourceSpec: type: git params: - name: url value: https://github.com/spring-projects/spring-petclinic workspaces: - name: local-maven-repo persistentVolumeClaim: claimName: maven-repo-pvc &lt;/pre&gt; &lt;p&gt;Notice the mapping between the &lt;code&gt;maven-repo-pvc&lt;/code&gt; PVC and the workspace that is declared for caching maven dependencies. As a result, this PVC is passed to the pipeline and to the respective tasks as the shared volume for caching files and artifacts.&lt;/p&gt; &lt;p&gt;Since it’s the first time this Maven goal runs, the pipeline run will take time to download dependencies and finish the execution:&lt;/p&gt; &lt;pre&gt;$ tkn pr list NAME STARTED DURATION STATUS petclinic-run-6l5w7 16 minutes ago 9 minutes Succeeded &lt;/pre&gt; &lt;p&gt;You can see here that the pipeline run took about nine minutes to complete in my environment. You can also get a breakdown of how long the execution of each task took (also see Figure 3):&lt;/p&gt; &lt;pre&gt;$ tkn pr describe petclinic-run-6l5w7 ... Taskruns NAME TASK NAME STARTED DURATION STATUS ∙ petclinic-run-6l5w7-gen-report-s6mhf gen-report 16 minutes ago 4 minutes Succeeded ∙ petclinic-run-6l5w7-int-test-8tbkn int-test 16 minutes ago 2 minutes Succeeded ∙ petclinic-run-6l5w7-build-4gg4l build 21 minutes ago 4 minutes Succeeded &lt;/pre&gt; &lt;div id="attachment_683437" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683437" class="wp-image-683437 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-1024x365.png" alt="Red Hat OpenShift Container Platform -&amp;#62; Developer -&amp;#62; Pipelines screenshot" width="640" height="228" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-1024x365.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-300x107.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-768x274.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-683437" class="wp-caption-text"&gt;Figure 3: Viewing your pipeline run results in Red Hat OpenShift Container Platform.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Re-run the pipeline once more by applying (through &lt;code&gt;kubectl create&lt;/code&gt;) the &lt;code&gt;pipelinerun&lt;/code&gt; YAML once more and observe the execution time:&lt;/p&gt; &lt;pre&gt;$ tkn pr list NAME STARTED DURATION STATUS petclinic-run-qb64z 7 minutes ago 4 minutes Succeeded petclinic-run-6l5w7 40 minutes ago 9 minutes Succeeded &lt;/pre&gt; &lt;p&gt;Notice the significant reduction in the execution time to about four minutes in my environment. The breakdown of task execution time can show the effect more accurately:&lt;/p&gt; &lt;pre&gt;$ tkn pr describe petclinic-run-qb64z ... Taskruns NAME TASK NAME STARTED DURATION STATUS ∙ petclinic-run-qb64z-int-test-ppwgc int-test 4 minutes ago 2 minutes Succeeded ∙ petclinic-run-qb64z-gen-report-mhhmj gen-report 4 minutes ago 2 minutes Succeeded ∙ petclinic-run-qb64z-build-ck7cp build 5 minutes ago 1 minute Succeeded &lt;/pre&gt; &lt;p&gt;The test task run wasn&amp;#8217;t affected much because it uses most of the same dependencies that were downloaded in the build task run even in the first pipeline run, as you can see in Figures 4 and 5.&lt;/p&gt; &lt;div id="attachment_683417" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683417" class="wp-image-683417 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-1024x460.png" alt="Red Hat OpenShift Container Platform -&amp;#62; Developer -&amp;#62; Pipelines -&amp;#62; Pipeline Details" width="640" height="288" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-1024x460.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-768x345.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-683417" class="wp-caption-text"&gt;Figure 4: Comparing the pipeline details for the two runs.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_683457" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683457" class="wp-image-683457 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-1024x444.png" alt="Red Hat OpenShift Container Platform -&amp;#62; Developer -&amp;#62; Pipelines -&amp;#62; Pipeline Runs -&amp;#62; Pipeline Run Details" width="640" height="278" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-1024x444.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-768x333.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-683457" class="wp-caption-text"&gt;Figure 5: Viewing the pipeline run overview.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Workspace support in Tekton 0.10 simplifies sharing files and artifacts between tasks in a pipeline, such as passing a JAR file from one task to another, or caching build dependencies as demonstrated in this article. Nevertheless, that’s just the beginning of what Tekton can do, and the Tekton community is developing improvements for the workspace user experience by bringing support to TektonCD CLI.&lt;/p&gt; &lt;h2&gt;Try it out&lt;/h2&gt; &lt;p&gt;All files used in this article are available in the following GitHub repository:&lt;br /&gt; &lt;a href="https://github.com/siamaksade/tekton-pipelines-maven-demo" target="_blank" rel="noopener noreferrer"&gt;https://github.com/siamaksade/tekton-pipelines-maven-demo&lt;/a&gt;. To use them, download and install &lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;CodeReady Containers&lt;/a&gt; and &lt;a href="https://github.com/tektoncd/cli/releases" target="_blank" rel="noopener noreferrer"&gt;TektonCD CLI&lt;/a&gt; on your workstation, and then install the &lt;a href="https://openshift.github.io/pipelines-docs/docs/0.8/proc_installing-pipelines-operator-in-web-console.html" target="_blank" rel="noopener noreferrer"&gt;OpenShift Pipelines Operator&lt;/a&gt; from the &lt;code&gt;canary&lt;/code&gt; operator channel to enable Tekton Pipelines 0.10 on the platform.&lt;/p&gt; &lt;p&gt;Thereafter, run the following commands to create the pipeline:&lt;/p&gt; &lt;pre&gt;$ oc create -f pvc.yaml $ oc create -f maven-task.yaml $ oc create -f maven-pipeline.yaml $ oc create -f maven-pipelinerun.yaml &lt;/pre&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#038;title=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" data-a2a-url="https://developers.redhat.com/blog/2020/02/26/speed-up-maven-builds-in-tekton-pipelines/" data-a2a-title="Speed up Maven builds in Tekton Pipelines"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/26/speed-up-maven-builds-in-tekton-pipelines/"&gt;Speed up Maven builds in Tekton Pipelines&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uhVVkpYW8IQ" height="1" width="1" alt=""/&gt;</content><summary>Tekton is an open source project that provides standard Kubernetes-style resources and building blocks for creating CI/CD pipelines that can run on any Kubernetes. Tekton does this by introducing a number of custom resource definitions (CRD) such as Pipeline, Task, and ClusterTask to provide a language and structure for defining delivery pipelines as shown in Figure 1. Tekton also provides a set o...</summary><dc:creator>Siamak Sadeghianfar</dc:creator><dc:date>2020-02-26T08:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/26/speed-up-maven-builds-in-tekton-pipelines/</feedburner:origLink></entry><entry><title>How to ignore files in Git without .gitignore</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ckTd92emoho/" /><category term=".gitignore" scheme="searchisko:content:tags" /><category term="accidental file check-in" scheme="searchisko:content:tags" /><category term="developer security" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="git" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Heiko Rupp</name></author><id>searchisko:content:id:jbossorg_blog-how_to_ignore_files_in_git_without_gitignore</id><updated>2020-02-25T08:00:43Z</updated><published>2020-02-25T08:00:43Z</published><content type="html">&lt;p&gt;Git has a handy feature when it comes to preventing accidental file check-ins when the files are meant to stay local. The obvious candidates are compiled binaries when you only want to check in the source code. Other candidates are files with local configurations.&lt;/p&gt; &lt;p&gt;One can put all of those files and paths into a &lt;code&gt;.gitignore&lt;/code&gt; file in the project. To persist those changes (and to share the common file contents with collaborators on the project), one usually adds the &lt;code&gt;.gitignore&lt;/code&gt; file to Git like any other file in the project.&lt;/p&gt; &lt;h2&gt;The problem&lt;/h2&gt; &lt;p&gt;Unfortunately, there are limits to this approach. &lt;span id="more-681437"&gt;&lt;/span&gt;Putting local files into the &lt;code&gt;.gitignore&lt;/code&gt; file only works well with items that are common for all collaborators, such as files and directories within the project. Just imagine what would happen if hundreds of collaborators put their specific paths into &lt;code&gt;.gitignore&lt;/code&gt;. That practice would create a huge mess and churn.&lt;/p&gt; &lt;p&gt;Adding file names and paths can also reveal information that should not be public. It could, for example, reveal customer information (this issue is not only about file contents, but also about the customer&amp;#8217;s name, which can reveal information as metadata).&lt;/p&gt; &lt;p&gt;Just not checking in the &lt;code&gt;.gitignore&lt;/code&gt; file can be a pain as well. When one is switching branches or updating the local working tree, one has to often &lt;a href="https://git-scm.com/docs/git-stash" target="_blank" rel="noopener noreferrer"&gt;stash&lt;/a&gt; the file (with local changes), switch the branch, or update and then unstash (potentially with merge conflicts).&lt;/p&gt; &lt;h2&gt;Help is available&lt;/h2&gt; &lt;p&gt;Luckily, Git offers alternative ways to prevent accidental file check-ins. For example, the file &lt;code&gt;.git/info/exclude&lt;/code&gt; works just like &lt;code&gt;.gitignore&lt;/code&gt; on a per-project base. If you need to ignore certain file patterns (e.g., backup files for an exotic editor), you can even use a per-user file like &lt;code&gt;~/.config/git/ignore&lt;/code&gt;. The cool thing is that these files live in areas that Git does not examine. Git will thus not add them to the changeset, so it will not commit and push to a remote.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; These other two files use the &lt;code&gt;.gitignore&lt;/code&gt;format, so you can use wildcards in those as well.&lt;/p&gt; &lt;h2&gt;Listing ignored files&lt;/h2&gt; &lt;p&gt;Git would not be Git if it did not have commands that help you determine if a file or directory is ignored. The first of these commands is &lt;a href="https://git-scm.com/docs/git-ls-files"&gt;&lt;code&gt;git ls-files&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;$ git ls-files --others --exclude-from=.gitignore $ git ls-files --others --exclude-from=.git/info/exclude&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;--others&lt;/code&gt; argument tells the command to show files that are not in the index, and the &lt;code&gt;--exclude-from&lt;/code&gt; is a filter to not show files from its parameter. Thus, the first version shows thus the ignored files that are not listed in the &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Another helpful command is &lt;a href="https://git-scm.com/docs/git-check-ignore"&gt;&lt;code&gt;git check-ignore&lt;/code&gt;&lt;/a&gt;, which requires a path argument. It returns the file name and an exit code of 0 on success. Otherwise, this command exits with a code of 1 if the argument is not in one of the ignore files.&lt;/p&gt; &lt;p&gt;Git has a large set of manual pages that can help you with the commands and files. Most notably for our purpose, you will want to focus on the &lt;a href="https://git-scm.com/docs/gitignore"&gt;&lt;code&gt;gitignore(5)&lt;/code&gt;&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#038;title=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" data-a2a-url="https://developers.redhat.com/blog/2020/02/25/how-to-ignore-files-in-git-without-gitignore/" data-a2a-title="How to ignore files in Git without .gitignore"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/25/how-to-ignore-files-in-git-without-gitignore/"&gt;How to ignore files in Git without .gitignore&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ckTd92emoho" height="1" width="1" alt=""/&gt;</content><summary>Git has a handy feature when it comes to preventing accidental file check-ins when the files are meant to stay local. The obvious candidates are compiled binaries when you only want to check in the source code. Other candidates are files with local configurations. One can put all of those files and paths into a .gitignore file in the project. To persist those changes (and to share the common file ...</summary><dc:creator>Heiko Rupp</dc:creator><dc:date>2020-02-25T08:00:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/25/how-to-ignore-files-in-git-without-gitignore/</feedburner:origLink></entry><entry><title>Byteman 4.0.11 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/T13SaiHnbwM/byteman-4011-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_11_has_been_released</id><updated>2020-02-24T17:20:00Z</updated><published>2020-02-24T17:20:00Z</published><content type="html">Byteman 4.0.11 is now available from the &lt;a href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest update release for use on all JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.11 is a maintenance release which fixes a build issue introduced in 4.0.10 and corrects a few minor errors in the rule parser. More details are provided in the &lt;a href="http://downloads.jboss.org/byteman/latest/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/T13SaiHnbwM" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.11 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest update release for use on all JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.11 is a maintenance release which fixes a build issue introduced in 4.0.10 and corrects a few minor errors in the rule parser. More details are pro...</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2020-02-24T17:20:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2020/02/byteman-4011-has-been-released.html</feedburner:origLink></entry></feed>
